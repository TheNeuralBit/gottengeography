#!/usr/bin/python3

# GottenGeography - Automagically geotags photos by comparing timestamps to GPX data
# Copyright (C) 2010 Robert Park <rbpark@exolucere.ca>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from gi.repository import Gtk
import sys

def need(dependency):
    """Exit the program and tell the user what dependency was missing."""
    sys.exit('GottenGeography requires at least ' + dependency)

#try:
#    from dateutil.parser import parse
#except:
#    need('python-dateutil 1.5')

try:
    import gi
    # Raises AttributeError with pygobject 2.21.
    gi.require_version('Gtk', '3.0')
except:
    need('Gtk 3.0 (via pygobject3 3.0.3)')

try:
    from gi.repository import Champlain
    # Raises AttributeError with libchamplain 0.8 or earlier.
    Champlain.PathLayer
    
    # Raises TypeError with libchamplain 0.12.0
    [source.get_id() for source in
        Champlain.MapSourceFactory.dup_default().get_registered()]
except:
    need('libchamplain 0.12.2')

try:
    from gi.repository import GExiv2
except:
    need('gexiv2 0.5 (with introspection support)')


old_hook = sys.excepthook
def new_hook(*args):
    """Exit cleanly if there was an unhandled exception."""
    old_hook(*args)
    while Gtk.main_level():
        Gtk.main_quit()
    sys.exit()
sys.excepthook = new_hook


# If we got this far, it looks like we have everything we need!
# Time to launch the app.

from gg.app import GottenGeography
GottenGeography(not sys.argv[1:]).run(sys.argv)

